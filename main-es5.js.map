{"version":3,"sources":["webpack:///src/app/core/animations/route.animations.ts","webpack:///src/app/core/google-analytics/google-analytics.effects.ts","webpack:///src/app/core/settings/settings.reducer.ts","webpack:///src/environments/environment.ts","webpack:///src/app/core/settings/settings.actions.ts","webpack:///src/app/core/error-handler/app-error-handler.service.ts","webpack:///src/app/core/auth/auth.selectors.ts","webpack:///src/app/core/notifications/notification.service.ts","webpack:///src/app/core/settings/settings.selectors.ts","webpack:///src/app/core/local-storage/local-storage.service.ts","webpack:///src/app/app/app.component.ts","webpack:///src/app/app/app.component.html","webpack:///src/app/core/router/custom-serializer.ts","webpack:///src/app/core/meta-reducers/init-state-from-local-storage.reducer.ts","webpack:///src/app/core/auth/auth.reducer.ts","webpack:///src/app/core/core.state.ts","webpack:///src/app/core/title/title.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/core/animations/animations.service.ts","webpack:///src/app/core/settings/settings.model.ts","webpack:///src/app/core/auth/auth-guard.service.ts","webpack:///src/app/core/meta-reducers/debug.reducer.ts","webpack:///src/app/core/auth/auth.effects.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/auth/auth.actions.ts","webpack:///src/app/core/settings/settings.effects.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/core/http-interceptors/http-error.interceptor.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/assets/logo.png"],"names":["ROUTE_ANIMATIONS_ELEMENTS","STEPS_ALL","opacity","position","optional","transform","STEPS_NONE","STEPS_PAGE","STEPS_ELEMENTS","routeAnimations","isRouteAnimationsAll","isRouteAnimationsNone","isRouteAnimationsPage","isRouteAnimationsElements","isRouteAnimationsType","GoogleAnalyticsEffects","router","pageView","events","pipe","event","window","ga","urlAfterRedirects","dispatch","initialState","language","theme","autoNightMode","nightTheme","stickyHeader","pageAnimations","pageAnimationsDisabled","elementsAnimations","hour","reducer","state","action","settingsReducer","packageJson","environment","appName","envName","production","test","i18nPrefix","versions","app","version","angular","dependencies","ngrx","material","bootstrap","rxjs","ngxtranslate","fontAwesome","angularCli","devDependencies","typescript","cypress","eslint","actionSettingsChangeLanguage","actionSettingsChangeTheme","actionSettingsChangeAutoNightMode","actionSettingsChangeStickyHeader","actionSettingsChangeAnimationsPage","actionSettingsChangeAnimationsPageDisabled","actionSettingsChangeAnimationsElements","actionSettingsChangeHour","AppErrorHandler","notificationsService","error","displayMessage","selectAuth","selectIsAuthenticated","isAuthenticated","NotificationService","snackBar","zone","message","show","duration","panelClass","configuration","run","open","providedIn","selectSettings","selectSettingsStickyHeader","selectSettingsLanguage","selectTheme","settings","selectPageAnimations","selectElementsAnimations","selectAutoNightMode","selectNightTheme","selectHour","selectIsNightHour","selectEffectiveTheme","isNightHour","toLowerCase","APP_PREFIX","LocalStorageService","key","value","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","testValue","testKey","errorMessage","retrievedValue","Error","Object","keys","reduce","storageKey","includes","stateKeys","replace","split","map","token","index","charAt","toUpperCase","slice","join","currentStateRef","forEach","length","AppComponent","store","storageService","isProd","year","Date","getFullYear","logo","languages","navigation","link","label","navigationSideMenu","testLocalStorage","isIEorEdgeOrSafari","isAuthenticated$","stickyHeader$","language$","theme$","name","onLogoutClick","selector","templateUrl","styleUrls","animations","CustomSerializer","routerState","route","root","firstChild","url","queryParams","params","initStateFromLocalStorage","newState","toString","type","loadInitialState","authReducer","reducers","auth","metaReducers","unshift","selectAuthState","selectSettingsState","selectRouterState","TitleService","translateService","title","snapshot","lazyTranslateService","lastChild","children","data","translate","get","translatedTitle","subscribe","setTitle","AppModule","imports","declarations","AnimationsService","routeAnimationType","NIGHT_MODE_THEME","AuthGuardService","debug","console","log","payload","oldState","AUTH_KEY","AuthEffects","actions$","localStorageService","login","logout","navigate","httpLoaderFactory","http","CoreModule","parentModule","faIconLibrary","addIcons","provide","useClass","multi","forRoot","instrument","loader","useFactory","deps","providers","exports","authLogin","authLogout","SETTINGS_KEY","INIT","SettingsEffects","overlayContainer","titleService","animationsService","ngZone","changeHour","runOutsideAngular","setInterval","getHours","persistSettings","updateRouteAnimationType","updateTheme","effectiveTheme","classList","getContainerElement","toRemove","Array","from","filter","item","remove","add","setTranslateServiceLanguage","use","routes","path","redirectTo","pathMatch","loadChildren","then","m","AboutModule","FeatureListModule","SettingsModule","ExamplesModule","AppRoutingModule","useHash","scrollPositionRestoration","preloadingStrategy","HttpErrorInterceptor","injector","request","next","handle","err","appErrorHandler","handleError","webpackEmptyAsyncContext","req","Promise","resolve","e","code","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import {\r\n  animate,\r\n  query,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  stagger,\r\n  sequence\r\n} from '@angular/animations';\r\nimport { AnimationsService } from './animations.service';\r\n\r\nexport const ROUTE_ANIMATIONS_ELEMENTS = 'route-animations-elements';\r\n\r\nconst STEPS_ALL: any[] = [\r\n  query(':enter > *', style({ opacity: 0, position: 'fixed' }), {\r\n    optional: true\r\n  }),\r\n  query(':enter .' + ROUTE_ANIMATIONS_ELEMENTS, style({ opacity: 0 }), {\r\n    optional: true\r\n  }),\r\n  sequence([\r\n    query(\r\n      ':leave > *',\r\n      [\r\n        style({ transform: 'translateY(0%)', opacity: 1 }),\r\n        animate(\r\n          '0.2s ease-in-out',\r\n          style({ transform: 'translateY(-3%)', opacity: 0 })\r\n        ),\r\n        style({ position: 'fixed' })\r\n      ],\r\n      { optional: true }\r\n    ),\r\n    query(\r\n      ':enter > *',\r\n      [\r\n        style({\r\n          transform: 'translateY(-3%)',\r\n          opacity: 0,\r\n          position: 'static'\r\n        }),\r\n        animate(\r\n          '0.5s ease-in-out',\r\n          style({ transform: 'translateY(0%)', opacity: 1 })\r\n        )\r\n      ],\r\n      { optional: true }\r\n    )\r\n  ]),\r\n  query(\r\n    ':enter .' + ROUTE_ANIMATIONS_ELEMENTS,\r\n    stagger(75, [\r\n      style({ transform: 'translateY(10%)', opacity: 0 }),\r\n      animate(\r\n        '0.5s ease-in-out',\r\n        style({ transform: 'translateY(0%)', opacity: 1 })\r\n      )\r\n    ]),\r\n    { optional: true }\r\n  )\r\n];\r\nconst STEPS_NONE = [];\r\nconst STEPS_PAGE = [STEPS_ALL[0], STEPS_ALL[2]];\r\nconst STEPS_ELEMENTS = [STEPS_ALL[1], STEPS_ALL[3]];\r\n\r\nexport const routeAnimations = trigger('routeAnimations', [\r\n  transition(isRouteAnimationsAll, STEPS_ALL),\r\n  transition(isRouteAnimationsNone, STEPS_NONE),\r\n  transition(isRouteAnimationsPage, STEPS_PAGE),\r\n  transition(isRouteAnimationsElements, STEPS_ELEMENTS)\r\n]);\r\n\r\nexport function isRouteAnimationsAll() {\r\n  return AnimationsService.isRouteAnimationsType('ALL');\r\n}\r\n\r\nexport function isRouteAnimationsNone() {\r\n  return AnimationsService.isRouteAnimationsType('NONE');\r\n}\r\n\r\nexport function isRouteAnimationsPage() {\r\n  return AnimationsService.isRouteAnimationsType('PAGE');\r\n}\r\n\r\nexport function isRouteAnimationsElements() {\r\n  return AnimationsService.isRouteAnimationsType('ELEMENTS');\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { createEffect } from '@ngrx/effects';\r\nimport { tap, filter } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class GoogleAnalyticsEffects {\r\n  pageView = createEffect(\r\n    () => () =>\r\n      this.router.events.pipe(\r\n        filter((event) => event instanceof NavigationEnd),\r\n        tap((event: NavigationEnd) => {\r\n          (<any>window).ga('set', 'page', event.urlAfterRedirects);\r\n          (<any>window).ga('send', 'pageview');\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n\r\n  constructor(private router: Router) {}\r\n}\r\n","import { SettingsState, NIGHT_MODE_THEME } from './settings.model';\r\nimport {\r\n  actionSettingsChangeAnimationsElements,\r\n  actionSettingsChangeAnimationsPage,\r\n  actionSettingsChangeAnimationsPageDisabled,\r\n  actionSettingsChangeAutoNightMode,\r\n  actionSettingsChangeHour,\r\n  actionSettingsChangeLanguage,\r\n  actionSettingsChangeStickyHeader,\r\n  actionSettingsChangeTheme\r\n} from './settings.actions';\r\nimport { Action, createReducer, on } from '@ngrx/store';\r\n\r\nexport const initialState: SettingsState = {\r\n  language: 'en',\r\n  theme: 'DEFAULT-THEME',\r\n  autoNightMode: false,\r\n  nightTheme: NIGHT_MODE_THEME,\r\n  stickyHeader: true,\r\n  pageAnimations: true,\r\n  pageAnimationsDisabled: false,\r\n  elementsAnimations: true,\r\n  hour: 0\r\n};\r\n\r\nconst reducer = createReducer(\r\n  initialState,\r\n  on(\r\n    actionSettingsChangeLanguage,\r\n    actionSettingsChangeTheme,\r\n    actionSettingsChangeAutoNightMode,\r\n    actionSettingsChangeStickyHeader,\r\n    actionSettingsChangeAnimationsPage,\r\n    actionSettingsChangeAnimationsElements,\r\n    actionSettingsChangeHour,\r\n    (state, action) => ({ ...state, ...action })\r\n  ),\r\n  on(\r\n    actionSettingsChangeAnimationsPageDisabled,\r\n    (state, { pageAnimationsDisabled }) => ({\r\n      ...state,\r\n      pageAnimationsDisabled,\r\n      pageAnimations: false\r\n    })\r\n  )\r\n);\r\n\r\nexport function settingsReducer(\r\n  state: SettingsState | undefined,\r\n  action: Action\r\n) {\r\n  return reducer(state, action);\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nconst packageJson = require('../../../../package.json');\r\n\r\nexport const environment = {\r\n  appName: 'Jurador-DEV',\r\n  envName: 'DEV',\r\n  production: false,\r\n  test: false,\r\n  i18nPrefix: '',\r\n  versions: {\r\n    app: packageJson.version,\r\n    angular: packageJson.dependencies['@angular/core'],\r\n    ngrx: packageJson.dependencies['@ngrx/store'],\r\n    material: packageJson.dependencies['@angular/material'],\r\n    bootstrap: packageJson.dependencies.bootstrap,\r\n    rxjs: packageJson.dependencies.rxjs,\r\n    ngxtranslate: packageJson.dependencies['@ngx-translate/core'],\r\n    fontAwesome: packageJson.dependencies['@fortawesome/fontawesome-free'],\r\n    angularCli: packageJson.devDependencies['@angular/cli'],\r\n    typescript: packageJson.devDependencies['typescript'],\r\n    cypress: packageJson.devDependencies['cypress'],\r\n    eslint: packageJson.devDependencies['eslint']\r\n  }\r\n};\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\nimport { Language } from './settings.model';\r\n\r\nexport const actionSettingsChangeLanguage = createAction(\r\n  '[Settings] Change Language',\r\n  props<{ language: Language }>()\r\n);\r\n\r\nexport const actionSettingsChangeTheme = createAction(\r\n  '[Settings] Change Theme',\r\n  props<{ theme: string }>()\r\n);\r\nexport const actionSettingsChangeAutoNightMode = createAction(\r\n  '[Settings] Change Auto Night Mode',\r\n  props<{ autoNightMode: boolean }>()\r\n);\r\n\r\nexport const actionSettingsChangeStickyHeader = createAction(\r\n  '[Settings] Change Sticky Header',\r\n  props<{ stickyHeader: boolean }>()\r\n);\r\n\r\nexport const actionSettingsChangeAnimationsPage = createAction(\r\n  '[Settings] Change Animations Page',\r\n  props<{ pageAnimations: boolean }>()\r\n);\r\n\r\nexport const actionSettingsChangeAnimationsPageDisabled = createAction(\r\n  '[Settings] Change Animations Page Disabled',\r\n  props<{ pageAnimationsDisabled: boolean }>()\r\n);\r\n\r\nexport const actionSettingsChangeAnimationsElements = createAction(\r\n  '[Settings] Change Animations Elements',\r\n  props<{ elementsAnimations: boolean }>()\r\n);\r\nexport const actionSettingsChangeHour = createAction(\r\n  '[Settings] Change Hours',\r\n  props<{ hour: number }>()\r\n);\r\n","import { Injectable, ErrorHandler } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { environment } from '../../../environments/environment';\r\n\r\nimport { NotificationService } from '../notifications/notification.service';\r\n\r\n/** Application-wide error handler that adds a UI notification to the error handling\r\n * provided by the default Angular ErrorHandler.\r\n */\r\n@Injectable()\r\nexport class AppErrorHandler extends ErrorHandler {\r\n  constructor(private notificationsService: NotificationService) {\r\n    super();\r\n  }\r\n\r\n  handleError(error: Error | HttpErrorResponse) {\r\n    let displayMessage = 'An error occurred.';\r\n\r\n    if (!environment.production) {\r\n      displayMessage += ' See console for details.';\r\n    }\r\n\r\n    this.notificationsService.error(displayMessage);\r\n\r\n    super.handleError(error);\r\n  }\r\n}\r\n","import { createSelector } from '@ngrx/store';\r\n\r\nimport { selectAuthState } from '../core.state';\r\nimport { AuthState } from './auth.models';\r\n\r\nexport const selectAuth = createSelector(\r\n  selectAuthState,\r\n  (state: AuthState) => state\r\n);\r\n\r\nexport const selectIsAuthenticated = createSelector(\r\n  selectAuthState,\r\n  (state: AuthState) => state.isAuthenticated\r\n);\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n  constructor(\r\n    private readonly snackBar: MatSnackBar,\r\n    private readonly zone: NgZone\r\n  ) {}\r\n\r\n  default(message: string) {\r\n    this.show(message, {\r\n      duration: 2000,\r\n      panelClass: 'default-notification-overlay'\r\n    });\r\n  }\r\n\r\n  info(message: string) {\r\n    this.show(message, {\r\n      duration: 2000,\r\n      panelClass: 'info-notification-overlay'\r\n    });\r\n  }\r\n\r\n  success(message: string) {\r\n    this.show(message, {\r\n      duration: 2000,\r\n      panelClass: 'success-notification-overlay'\r\n    });\r\n  }\r\n\r\n  warn(message: string) {\r\n    this.show(message, {\r\n      duration: 2500,\r\n      panelClass: 'warning-notification-overlay'\r\n    });\r\n  }\r\n\r\n  error(message: string) {\r\n    this.show(message, {\r\n      duration: 3000,\r\n      panelClass: 'error-notification-overlay'\r\n    });\r\n  }\r\n\r\n  private show(message: string, configuration: MatSnackBarConfig) {\r\n    // Need to open snackBar from Angular zone to prevent issues with its position per\r\n    // https://stackoverflow.com/questions/50101912/snackbar-position-wrong-when-use-errorhandler-in-angular-5-and-material\r\n    this.zone.run(() => this.snackBar.open(message, null, configuration));\r\n  }\r\n}\r\n","import { createSelector } from '@ngrx/store';\r\n\r\nimport { SettingsState } from './settings.model';\r\nimport { selectSettingsState } from '../core.state';\r\n\r\nexport const selectSettings = createSelector(\r\n  selectSettingsState,\r\n  (state: SettingsState) => state\r\n);\r\n\r\nexport const selectSettingsStickyHeader = createSelector(\r\n  selectSettings,\r\n  (state: SettingsState) => state.stickyHeader\r\n);\r\n\r\nexport const selectSettingsLanguage = createSelector(\r\n  selectSettings,\r\n  (state: SettingsState) => state.language\r\n);\r\n\r\nexport const selectTheme = createSelector(\r\n  selectSettings,\r\n  (settings) => settings.theme\r\n);\r\n\r\nexport const selectPageAnimations = createSelector(\r\n  selectSettings,\r\n  (settings) => settings.pageAnimations\r\n);\r\n\r\nexport const selectElementsAnimations = createSelector(\r\n  selectSettings,\r\n  (settings) => settings.elementsAnimations\r\n);\r\n\r\nexport const selectAutoNightMode = createSelector(\r\n  selectSettings,\r\n  (settings) => settings.autoNightMode\r\n);\r\n\r\nexport const selectNightTheme = createSelector(\r\n  selectSettings,\r\n  (settings) => settings.nightTheme\r\n);\r\n\r\nexport const selectHour = createSelector(\r\n  selectSettings,\r\n  (settings) => settings.hour\r\n);\r\n\r\nexport const selectIsNightHour = createSelector(\r\n  selectAutoNightMode,\r\n  selectHour,\r\n  (autoNightMode, hour) => autoNightMode && (hour >= 21 || hour <= 7)\r\n);\r\n\r\nexport const selectEffectiveTheme = createSelector(\r\n  selectTheme,\r\n  selectNightTheme,\r\n  selectIsNightHour,\r\n  (theme, nightTheme, isNightHour) =>\r\n    (isNightHour ? nightTheme : theme).toLowerCase()\r\n);\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst APP_PREFIX = 'jurador-';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n  constructor() {}\r\n\r\n  static loadInitialState() {\r\n    return Object.keys(localStorage).reduce((state: any, storageKey) => {\r\n      if (storageKey.includes(APP_PREFIX)) {\r\n        const stateKeys = storageKey\r\n          .replace(APP_PREFIX, '')\r\n          .toLowerCase()\r\n          .split('.')\r\n          .map((key) =>\r\n            key\r\n              .split('-')\r\n              .map((token, index) =>\r\n                index === 0\r\n                  ? token\r\n                  : token.charAt(0).toUpperCase() + token.slice(1)\r\n              )\r\n              .join('')\r\n          );\r\n        let currentStateRef = state;\r\n        stateKeys.forEach((key, index) => {\r\n          if (index === stateKeys.length - 1) {\r\n            currentStateRef[key] = JSON.parse(localStorage.getItem(storageKey));\r\n            return;\r\n          }\r\n          currentStateRef[key] = currentStateRef[key] || {};\r\n          currentStateRef = currentStateRef[key];\r\n        });\r\n      }\r\n      return state;\r\n    }, {});\r\n  }\r\n\r\n  setItem(key: string, value: any) {\r\n    localStorage.setItem(`${APP_PREFIX}${key}`, JSON.stringify(value));\r\n  }\r\n\r\n  getItem(key: string) {\r\n    return JSON.parse(localStorage.getItem(`${APP_PREFIX}${key}`));\r\n  }\r\n\r\n  removeItem(key: string) {\r\n    localStorage.removeItem(`${APP_PREFIX}${key}`);\r\n  }\r\n\r\n  /** Tests that localStorage exists, can be written to, and read from. */\r\n  testLocalStorage() {\r\n    const testValue = 'testValue';\r\n    const testKey = 'testKey';\r\n    const errorMessage = 'localStorage did not return expected value';\r\n\r\n    this.setItem(testKey, testValue);\r\n    const retrievedValue = this.getItem(testKey);\r\n    this.removeItem(testKey);\r\n\r\n    if (retrievedValue !== testValue) {\r\n      throw new Error(errorMessage);\r\n    }\r\n  }\r\n}\r\n","import browser from 'browser-detect';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment as env } from '../../environments/environment';\r\n\r\nimport {\r\n  authLogin,\r\n  authLogout,\r\n  routeAnimations,\r\n  LocalStorageService,\r\n  selectIsAuthenticated,\r\n  selectSettingsStickyHeader,\r\n  selectSettingsLanguage,\r\n  selectEffectiveTheme\r\n} from '../core/core.module';\r\nimport {\r\n  actionSettingsChangeAnimationsPageDisabled,\r\n  actionSettingsChangeLanguage\r\n} from '../core/settings/settings.actions';\r\n\r\n@Component({\r\n  selector: 'jurador-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  animations: [routeAnimations]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  isProd = env.production;\r\n  envName = env.envName;\r\n  version = env.versions.app;\r\n  year = new Date().getFullYear();\r\n  logo = require('../../assets/logo.png').default;\r\n  languages = ['en', 'de', 'sk', 'fr', 'es', 'pt-br', 'zh-cn', 'he'];\r\n  navigation = [\r\n    { link: 'about', label: 'jurador.menu.about' },\r\n    { link: 'feature-list', label: 'jurador.menu.features' },\r\n    { link: 'examples', label: 'jurador.menu.examples' }\r\n  ];\r\n  navigationSideMenu = [\r\n    ...this.navigation,\r\n    { link: 'settings', label: 'jurador.menu.settings' }\r\n  ];\r\n\r\n  isAuthenticated$: Observable<boolean>;\r\n  stickyHeader$: Observable<boolean>;\r\n  language$: Observable<string>;\r\n  theme$: Observable<string>;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private storageService: LocalStorageService\r\n  ) {}\r\n\r\n  private static isIEorEdgeOrSafari() {\r\n    return ['ie', 'edge', 'safari'].includes(browser().name);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.storageService.testLocalStorage();\r\n    if (AppComponent.isIEorEdgeOrSafari()) {\r\n      this.store.dispatch(\r\n        actionSettingsChangeAnimationsPageDisabled({\r\n          pageAnimationsDisabled: true\r\n        })\r\n      );\r\n    }\r\n\r\n    this.isAuthenticated$ = this.store.pipe(select(selectIsAuthenticated));\r\n    this.stickyHeader$ = this.store.pipe(select(selectSettingsStickyHeader));\r\n    this.language$ = this.store.pipe(select(selectSettingsLanguage));\r\n    this.theme$ = this.store.pipe(select(selectEffectiveTheme));\r\n  }\r\n\r\n  onLoginClick() {\r\n    this.store.dispatch(authLogin());\r\n  }\r\n\r\n  onLogoutClick() {\r\n    this.store.dispatch(authLogout());\r\n  }\r\n\r\n  onLanguageSelect({ value: language }) {\r\n    this.store.dispatch(actionSettingsChangeLanguage({ language }));\r\n  }\r\n}\r\n","<div [class]=\"'theme-wrapper ' + (theme$ | async)\">\r\n\r\n  <mat-sidenav-container>\r\n\r\n    <mat-sidenav #sidenav mode=\"push\">\r\n      <div class=\"branding\"><img [src]=\"logo\" [alt]=\"logo\"/>\r\n        <span>{{ 'jurador.title.short' | translate}}</span></div>\r\n      <mat-nav-list>\r\n        <a mat-list-item *ngFor=\"let item of navigationSideMenu\" (click)=\"sidenav.close()\" [routerLink]=\"[item.link]\"\r\n          routerLinkActive=\"active\">\r\n          {{item.label | translate}}\r\n        </a>\r\n        <a mat-list-item href=\"https://github.com/tomastrajan/angular-ngrx-material-starter\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Github\r\n        </a>\r\n      </mat-nav-list>\r\n    </mat-sidenav>\r\n\r\n    <div class=\"wrapper\">\r\n\r\n      <div class=\"toolbar\" [style.position]=\"(stickyHeader$ | async) ? 'fixed' : 'inherit'\" [class.mat-elevation-z4]=\"(stickyHeader$ | async)\">\r\n        <mat-toolbar color=\"primary\">\r\n          <button mat-icon-button class=\"d-md-none\" (click)=\"sidenav.open()\">\r\n            <fa-icon icon=\"bars\"></fa-icon>\r\n\r\n          </button>\r\n\r\n          <span routerLink=\"\" class=\"branding spacer center d-inline d-sm-none\">\r\n            <img [src]=\"logo\" [alt]=\"logo\"/></span>\r\n          <span routerLink=\"\" class=\"branding spacer center d-none d-sm-inline d-md-none\"><img [src]=\"logo\" [alt]=\"logo\"/> {{\r\n            'jurador.title.short' | translate }}</span>\r\n          <span routerLink=\"\" class=\"branding spacer d-none d-md-inline\"><img [src]=\"logo\"[alt]=\"logo\" /> {{ 'jurador.title.long' | translate\r\n            }}</span>\r\n\r\n          <span class=\"d-none d-md-inline\">\r\n            <button mat-button class=\"nav-button\" *ngFor=\"let item of navigation\" [routerLink]=\"[item.link]\"\r\n              routerLinkActive=\"active\">\r\n              {{item.label | translate}}\r\n            </button>\r\n          </span>\r\n\r\n          <button mat-button mat-stroked-button color=\"accent\" *ngIf=\"!(isAuthenticated$ | async)\" (click)=\"onLoginClick()\">\r\n            {{ 'jurador.menu.login' | translate }}\r\n          </button>\r\n\r\n          <button *ngIf=\"(isAuthenticated$ | async)\"\r\n                  mat-icon-button\r\n                  [matMenuTriggerFor]=\"toolbarUserMenu\">\r\n            <fa-icon icon=\"user-circle\"></fa-icon>\r\n          </button>\r\n          <mat-menu #toolbarUserMenu=\"matMenu\">\r\n            <button mat-menu-item (click)=\"onLogoutClick()\">\r\n              <mat-icon><fa-icon icon=\"power-off\"></fa-icon></mat-icon>\r\n              <span>{{ 'jurador.menu.logout' | translate }}</span>\r\n            </button>\r\n          </mat-menu>\r\n\r\n          <button mat-icon-button routerLink=\"settings\" class=\"d-none d-sm-inline\">\r\n            <fa-icon icon=\"cog\"></fa-icon>\r\n          </button>\r\n\r\n          <a [matTooltip]=\"'jurador.header.github' | translate\"\r\n             matTooltipPosition=\"before\"\r\n             mat-icon-button\r\n             class=\"link d-none d-sm-inline\"\r\n             href=\"https://github.com/tomastrajan/angular-ngrx-material-starter\"\r\n             target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <fa-icon [icon]=\"['fab','github']\"></fa-icon>\r\n          </a>\r\n\r\n          <span *ngIf=\"language$ | async as language\">\r\n            <mat-select [ngModel]=\"language\" (selectionChange)=\"onLanguageSelect($event)\">\r\n              <mat-option *ngFor=\"let l of languages\" [value]=\"l\">\r\n                {{ l.toUpperCase() }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </span>\r\n        </mat-toolbar>\r\n      </div>\r\n\r\n      <div class=\"content\" [@routeAnimations]=\"o.isActivated && o.activatedRoute.routeConfig.data && o.activatedRoute.routeConfig.data.title\">\r\n        <router-outlet #o=\"outlet\"></router-outlet>\r\n      </div>\r\n\r\n      <div class=\"footer\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-12 links\">\r\n            <a href=\"\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <fa-icon [icon]=\"['fab','github']\"></fa-icon>\r\n              <span>Github</span>\r\n            </a>\r\n            <a href=\"\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <fa-icon [icon]=\"['fab','medium-m']\"></fa-icon>\r\n              <span>Medium</span>\r\n            </a>\r\n            <a href=\"\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <fa-icon [icon]=\"['fab','twitter']\"></fa-icon>\r\n              <span>Twitter</span>\r\n            </a>\r\n            <a href=\"\"\r\n               target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <fa-icon [icon]=\"['fab','youtube']\"></fa-icon>\r\n              <span>Youtube</span>\r\n            </a>\r\n            <a href=\"\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <fa-icon [icon]=\"['fab','instagram']\"></fa-icon>\r\n              <span>Instagram</span>\r\n            </a>\r\n            <a href=\"\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <fa-icon icon=\"play-circle\"></fa-icon>\r\n              <span>Slides</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12 signature\">\r\n            &#169; <span class=\"year\">{{year}}</span> - Tomas Trajan\r\n            <br class=\"d-block d-sm-none\">\r\n            <a [matTooltip]=\"'jurador.footer.changelog' | translate\"\r\n               matTooltipPosition=\"before\"\r\n               href=\"\">\r\n              <fa-icon icon=\"rocket\"></fa-icon>\r\n              {{version}} <span *ngIf=\"!isProd\">[{{envName}}]</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </mat-sidenav-container>\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { RouterStateSnapshot } from '@angular/router';\r\nimport { RouterStateSerializer } from '@ngrx/router-store';\r\nimport { RouterStateUrl } from './router.state';\r\n\r\n@Injectable()\r\nexport class CustomSerializer implements RouterStateSerializer<RouterStateUrl> {\r\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\r\n    let route = routerState.root;\r\n\r\n    while (route.firstChild) {\r\n      route = route.firstChild;\r\n    }\r\n\r\n    const {\r\n      url,\r\n      root: { queryParams }\r\n    } = routerState;\r\n    const { params } = route;\r\n\r\n    return { url, params, queryParams };\r\n  }\r\n}\r\n","import { ActionReducer, INIT, UPDATE } from '@ngrx/store';\r\n\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { AppState } from '../core.state';\r\n\r\nexport function initStateFromLocalStorage(\r\n  reducer: ActionReducer<AppState>\r\n): ActionReducer<AppState> {\r\n  return function (state, action) {\r\n    const newState = reducer(state, action);\r\n    if ([INIT.toString(), UPDATE.toString()].includes(action.type)) {\r\n      return { ...newState, ...LocalStorageService.loadInitialState() };\r\n    }\r\n    return newState;\r\n  };\r\n}\r\n","import { AuthState } from './auth.models';\r\nimport { authLogin, authLogout } from './auth.actions';\r\nimport { createReducer, on, Action } from '@ngrx/store';\r\n\r\nexport const initialState: AuthState = {\r\n  isAuthenticated: false\r\n};\r\n\r\nconst reducer = createReducer(\r\n  initialState,\r\n  on(authLogin, (state) => ({ ...state, isAuthenticated: true })),\r\n  on(authLogout, (state) => ({ ...state, isAuthenticated: false }))\r\n);\r\n\r\nexport function authReducer(\r\n  state: AuthState | undefined,\r\n  action: Action\r\n): AuthState {\r\n  return reducer(state, action);\r\n}\r\n","import {\r\n  ActionReducerMap,\r\n  MetaReducer,\r\n  createFeatureSelector\r\n} from '@ngrx/store';\r\nimport { routerReducer, RouterReducerState } from '@ngrx/router-store';\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\nimport { initStateFromLocalStorage } from './meta-reducers/init-state-from-local-storage.reducer';\r\nimport { debug } from './meta-reducers/debug.reducer';\r\nimport { AuthState } from './auth/auth.models';\r\nimport { authReducer } from './auth/auth.reducer';\r\nimport { RouterStateUrl } from './router/router.state';\r\nimport { settingsReducer } from './settings/settings.reducer';\r\nimport { SettingsState } from './settings/settings.model';\r\n\r\nexport const reducers: ActionReducerMap<AppState> = {\r\n  auth: authReducer,\r\n  settings: settingsReducer,\r\n  router: routerReducer\r\n};\r\n\r\nexport const metaReducers: MetaReducer<AppState>[] = [\r\n  initStateFromLocalStorage\r\n];\r\n\r\nif (!environment.production) {\r\n  if (!environment.test) {\r\n    metaReducers.unshift(debug);\r\n  }\r\n}\r\n\r\nexport const selectAuthState = createFeatureSelector<AppState, AuthState>(\r\n  'auth'\r\n);\r\n\r\nexport const selectSettingsState = createFeatureSelector<\r\n  AppState,\r\n  SettingsState\r\n>('settings');\r\n\r\nexport const selectRouterState = createFeatureSelector<\r\n  AppState,\r\n  RouterReducerState<RouterStateUrl>\r\n>('router');\r\n\r\nexport interface AppState {\r\n  auth: AuthState;\r\n  settings: SettingsState;\r\n  router: RouterReducerState<RouterStateUrl>;\r\n}\r\n","import { Title } from '@angular/platform-browser';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { environment as env } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TitleService {\r\n  constructor(\r\n    private translateService: TranslateService,\r\n    private title: Title\r\n  ) {}\r\n\r\n  setTitle(\r\n    snapshot: ActivatedRouteSnapshot,\r\n    lazyTranslateService?: TranslateService\r\n  ) {\r\n    let lastChild = snapshot;\r\n    while (lastChild.children.length) {\r\n      lastChild = lastChild.children[0];\r\n    }\r\n    const { title } = lastChild.data;\r\n    const translate = lazyTranslateService || this.translateService;\r\n    if (title) {\r\n      translate\r\n        .get(title)\r\n        .pipe(filter((translatedTitle) => translatedTitle !== title))\r\n        .subscribe((translatedTitle) =>\r\n          this.title.setTitle(`${translatedTitle} - ${env.appName}`)\r\n        );\r\n    } else {\r\n      this.title.setTitle(env.appName);\r\n    }\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { CoreModule } from './core/core.module';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app/app.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    // angular\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n\r\n    // core\r\n    CoreModule,\r\n\r\n    // app\r\n    AppRoutingModule\r\n  ],\r\n  declarations: [AppComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnimationsService {\r\n  private static routeAnimationType: RouteAnimationType = 'NONE';\r\n\r\n  constructor() {\r\n    AnimationsService.routeAnimationType = 'NONE';\r\n  }\r\n\r\n  static isRouteAnimationsType(type: RouteAnimationType) {\r\n    return AnimationsService.routeAnimationType === type;\r\n  }\r\n\r\n  updateRouteAnimationType(\r\n    pageAnimations: boolean,\r\n    elementsAnimations: boolean\r\n  ) {\r\n    AnimationsService.routeAnimationType =\r\n      pageAnimations && elementsAnimations\r\n        ? 'ALL'\r\n        : pageAnimations\r\n        ? 'PAGE'\r\n        : elementsAnimations\r\n        ? 'ELEMENTS'\r\n        : 'NONE';\r\n  }\r\n}\r\n\r\nexport type RouteAnimationType = 'ALL' | 'PAGE' | 'ELEMENTS' | 'NONE';\r\n","import { AppState } from '../core.module';\r\n\r\nexport const NIGHT_MODE_THEME = 'BLACK-THEME';\r\n\r\nexport type Language = 'en' | 'sk' | 'de' | 'fr' | 'es' | 'pt-br' | 'he';\r\n\r\nexport interface SettingsState {\r\n  language: string;\r\n  theme: string;\r\n  autoNightMode: boolean;\r\n  nightTheme: string;\r\n  stickyHeader: boolean;\r\n  pageAnimations: boolean;\r\n  pageAnimationsDisabled: boolean;\r\n  elementsAnimations: boolean;\r\n  hour: number;\r\n}\r\n\r\nexport interface State extends AppState {\r\n  settings: SettingsState;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { selectIsAuthenticated } from './auth.selectors';\r\nimport { AppState } from '../core.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(private store: Store<AppState>) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.store.pipe(select(selectIsAuthenticated));\r\n  }\r\n}\r\n","import { ActionReducer } from '@ngrx/store';\r\n\r\nimport { AppState } from '../core.state';\r\n\r\nexport function debug(\r\n  reducer: ActionReducer<AppState>\r\n): ActionReducer<AppState> {\r\n  return function (state, action) {\r\n    const newState = reducer(state, action);\r\n    console.log(`[DEBUG] action: ${action.type}`, {\r\n      payload: (<any>action).payload,\r\n      oldState: state,\r\n      newState\r\n    });\r\n    return newState;\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ofType, createEffect, Actions } from '@ngrx/effects';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\n\r\nimport { authLogin, authLogout } from './auth.actions';\r\n\r\nexport const AUTH_KEY = 'AUTH';\r\n\r\n@Injectable()\r\nexport class AuthEffects {\r\n  login = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(authLogin),\r\n        tap(() =>\r\n          this.localStorageService.setItem(AUTH_KEY, { isAuthenticated: true })\r\n        )\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n\r\n  logout = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(authLogout),\r\n        tap(() => {\r\n          this.router.navigate(['']);\r\n          this.localStorageService.setItem(AUTH_KEY, {\r\n            isAuthenticated: false\r\n          });\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private localStorageService: LocalStorageService,\r\n    private router: Router\r\n  ) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, Optional, SkipSelf, ErrorHandler } from '@angular/core';\r\nimport {\r\n  HttpClientModule,\r\n  HttpClient,\r\n  HTTP_INTERCEPTORS\r\n} from '@angular/common/http';\r\nimport {\r\n  StoreRouterConnectingModule,\r\n  RouterStateSerializer\r\n} from '@ngrx/router-store';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport {\r\n  FaIconLibrary,\r\n  FontAwesomeModule\r\n} from '@fortawesome/angular-fontawesome';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\nimport {\r\n  AppState,\r\n  reducers,\r\n  metaReducers,\r\n  selectRouterState\r\n} from './core.state';\r\nimport { AuthEffects } from './auth/auth.effects';\r\nimport { selectIsAuthenticated, selectAuth } from './auth/auth.selectors';\r\nimport { authLogin, authLogout } from './auth/auth.actions';\r\nimport { AuthGuardService } from './auth/auth-guard.service';\r\nimport { TitleService } from './title/title.service';\r\nimport {\r\n  ROUTE_ANIMATIONS_ELEMENTS,\r\n  routeAnimations\r\n} from './animations/route.animations';\r\nimport { AnimationsService } from './animations/animations.service';\r\nimport { AppErrorHandler } from './error-handler/app-error-handler.service';\r\nimport { CustomSerializer } from './router/custom-serializer';\r\nimport { LocalStorageService } from './local-storage/local-storage.service';\r\nimport { HttpErrorInterceptor } from './http-interceptors/http-error.interceptor';\r\nimport { GoogleAnalyticsEffects } from './google-analytics/google-analytics.effects';\r\nimport { NotificationService } from './notifications/notification.service';\r\nimport { SettingsEffects } from './settings/settings.effects';\r\nimport {\r\n  selectSettingsLanguage,\r\n  selectEffectiveTheme,\r\n  selectSettingsStickyHeader\r\n} from './settings/settings.selectors';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {\r\n  faCog,\r\n  faBars,\r\n  faRocket,\r\n  faPowerOff,\r\n  faUserCircle,\r\n  faPlayCircle\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n  faGithub,\r\n  faMediumM,\r\n  faTwitter,\r\n  faInstagram,\r\n  faYoutube\r\n} from '@fortawesome/free-brands-svg-icons';\r\n\r\nexport {\r\n  TitleService,\r\n  selectAuth,\r\n  authLogin,\r\n  authLogout,\r\n  routeAnimations,\r\n  AppState,\r\n  LocalStorageService,\r\n  selectIsAuthenticated,\r\n  ROUTE_ANIMATIONS_ELEMENTS,\r\n  AnimationsService,\r\n  AuthGuardService,\r\n  selectRouterState,\r\n  NotificationService,\r\n  selectEffectiveTheme,\r\n  selectSettingsLanguage,\r\n  selectSettingsStickyHeader\r\n};\r\n\r\nexport function httpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(\r\n    http,\r\n    `${environment.i18nPrefix}/assets/i18n/`,\r\n    '.json'\r\n  );\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    // angular\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n\r\n    // material\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n\r\n    // ngrx\r\n    StoreModule.forRoot(reducers, { metaReducers }),\r\n    StoreRouterConnectingModule.forRoot(),\r\n    EffectsModule.forRoot([\r\n      AuthEffects,\r\n      SettingsEffects,\r\n      GoogleAnalyticsEffects\r\n    ]),\r\n    environment.production\r\n      ? []\r\n      : StoreDevtoolsModule.instrument({\r\n          name: 'Angular NgRx Material Starter'\r\n        }),\r\n\r\n    // 3rd party\r\n    FontAwesomeModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: httpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\r\n    { provide: ErrorHandler, useClass: AppErrorHandler },\r\n    { provide: RouterStateSerializer, useClass: CustomSerializer }\r\n  ],\r\n  exports: [\r\n    // angular\r\n    FormsModule,\r\n\r\n    // material\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n\r\n    // 3rd party\r\n    FontAwesomeModule,\r\n    TranslateModule\r\n  ]\r\n})\r\nexport class CoreModule {\r\n  constructor(\r\n    @Optional()\r\n    @SkipSelf()\r\n    parentModule: CoreModule,\r\n    faIconLibrary: FaIconLibrary\r\n  ) {\r\n    if (parentModule) {\r\n      throw new Error('CoreModule is already loaded. Import only in AppModule');\r\n    }\r\n    faIconLibrary.addIcons(\r\n      faCog,\r\n      faBars,\r\n      faRocket,\r\n      faPowerOff,\r\n      faUserCircle,\r\n      faPlayCircle,\r\n      faGithub,\r\n      faMediumM,\r\n      faTwitter,\r\n      faInstagram,\r\n      faYoutube\r\n    );\r\n  }\r\n}\r\n","import { createAction } from '@ngrx/store';\r\n\r\nexport const authLogin = createAction('[Auth] Login');\r\nexport const authLogout = createAction('[Auth] Logout');\r\n","import { ActivationEnd, Router } from '@angular/router';\r\nimport { Injectable, NgZone } from '@angular/core';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { combineLatest, merge, of } from 'rxjs';\r\nimport {\r\n  tap,\r\n  withLatestFrom,\r\n  distinctUntilChanged,\r\n  filter\r\n} from 'rxjs/operators';\r\n\r\nimport { selectSettingsState } from '../core.state';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { AnimationsService } from '../animations/animations.service';\r\nimport { TitleService } from '../title/title.service';\r\n\r\nimport {\r\n  actionSettingsChangeAnimationsElements,\r\n  actionSettingsChangeAnimationsPage,\r\n  actionSettingsChangeAnimationsPageDisabled,\r\n  actionSettingsChangeAutoNightMode,\r\n  actionSettingsChangeLanguage,\r\n  actionSettingsChangeTheme,\r\n  actionSettingsChangeStickyHeader,\r\n  actionSettingsChangeHour\r\n} from './settings.actions';\r\nimport {\r\n  selectEffectiveTheme,\r\n  selectSettingsLanguage,\r\n  selectPageAnimations,\r\n  selectElementsAnimations\r\n} from './settings.selectors';\r\nimport { State } from './settings.model';\r\n\r\nexport const SETTINGS_KEY = 'SETTINGS';\r\n\r\nconst INIT = of('jurador-init-effect-trigger');\r\n\r\n@Injectable()\r\nexport class SettingsEffects {\r\n  hour = 0;\r\n\r\n  changeHour = this.ngZone.runOutsideAngular(() =>\r\n    setInterval(() => {\r\n      const hour = new Date().getHours();\r\n      if (hour !== this.hour) {\r\n        this.hour = hour;\r\n        this.ngZone.run(() =>\r\n          this.store.dispatch(actionSettingsChangeHour({ hour }))\r\n        );\r\n      }\r\n    }, 60_000)\r\n  );\r\n\r\n  persistSettings = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(\r\n          actionSettingsChangeAnimationsElements,\r\n          actionSettingsChangeAnimationsPage,\r\n          actionSettingsChangeAnimationsPageDisabled,\r\n          actionSettingsChangeAutoNightMode,\r\n          actionSettingsChangeLanguage,\r\n          actionSettingsChangeStickyHeader,\r\n          actionSettingsChangeTheme\r\n        ),\r\n        withLatestFrom(this.store.pipe(select(selectSettingsState))),\r\n        tap(([action, settings]) =>\r\n          this.localStorageService.setItem(SETTINGS_KEY, settings)\r\n        )\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n\r\n  updateRouteAnimationType = createEffect(\r\n    () =>\r\n      merge(\r\n        INIT,\r\n        this.actions$.pipe(\r\n          ofType(\r\n            actionSettingsChangeAnimationsElements,\r\n            actionSettingsChangeAnimationsPage\r\n          )\r\n        )\r\n      ).pipe(\r\n        withLatestFrom(\r\n          combineLatest([\r\n            this.store.pipe(select(selectPageAnimations)),\r\n            this.store.pipe(select(selectElementsAnimations))\r\n          ])\r\n        ),\r\n        tap(([action, [pageAnimations, elementsAnimations]]) =>\r\n          this.animationsService.updateRouteAnimationType(\r\n            pageAnimations,\r\n            elementsAnimations\r\n          )\r\n        )\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n\r\n  updateTheme = createEffect(\r\n    () =>\r\n      merge(INIT, this.actions$.pipe(ofType(actionSettingsChangeTheme))).pipe(\r\n        withLatestFrom(this.store.pipe(select(selectEffectiveTheme))),\r\n        tap(([action, effectiveTheme]) => {\r\n          const classList = this.overlayContainer.getContainerElement()\r\n            .classList;\r\n          const toRemove = Array.from(classList).filter((item: string) =>\r\n            item.includes('-theme')\r\n          );\r\n          if (toRemove.length) {\r\n            classList.remove(...toRemove);\r\n          }\r\n          classList.add(effectiveTheme);\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n\r\n  setTranslateServiceLanguage = createEffect(\r\n    () =>\r\n      this.store.pipe(\r\n        select(selectSettingsLanguage),\r\n        distinctUntilChanged(),\r\n        tap((language) => this.translateService.use(language))\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n\r\n  setTitle = createEffect(\r\n    () =>\r\n      merge(\r\n        this.actions$.pipe(ofType(actionSettingsChangeLanguage)),\r\n        this.router.events.pipe(\r\n          filter((event) => event instanceof ActivationEnd)\r\n        )\r\n      ).pipe(\r\n        tap(() => {\r\n          this.titleService.setTitle(\r\n            this.router.routerState.snapshot.root,\r\n            this.translateService\r\n          );\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private store: Store<State>,\r\n    private router: Router,\r\n    private overlayContainer: OverlayContainer,\r\n    private localStorageService: LocalStorageService,\r\n    private titleService: TitleService,\r\n    private animationsService: AnimationsService,\r\n    private translateService: TranslateService,\r\n    private ngZone: NgZone\r\n  ) {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'about',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'about',\r\n    loadChildren: () =>\r\n      import('./features/about/about.module').then((m) => m.AboutModule)\r\n  },\r\n  {\r\n    path: 'feature-list',\r\n    loadChildren: () =>\r\n      import('./features/feature-list/feature-list.module').then(\r\n        (m) => m.FeatureListModule\r\n      )\r\n  },\r\n  {\r\n    path: 'settings',\r\n    loadChildren: () =>\r\n      import('./features/settings/settings.module').then(\r\n        (m) => m.SettingsModule\r\n      )\r\n  },\r\n  {\r\n    path: 'examples',\r\n    loadChildren: () =>\r\n      import('./features/examples/examples.module').then(\r\n        (m) => m.ExamplesModule\r\n      )\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'about'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  // useHash supports github.io demo page, remove in your app\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      useHash: true,\r\n      scrollPositionRestoration: 'enabled',\r\n      preloadingStrategy: PreloadAllModules\r\n    })\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Injectable, Injector, ErrorHandler } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n/** Passes HttpErrorResponse to application-wide error handler */\r\n@Injectable()\r\nexport class HttpErrorInterceptor implements HttpInterceptor {\r\n  constructor(private injector: Injector) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      tap({\r\n        error: (err: any) => {\r\n          if (err instanceof HttpErrorResponse) {\r\n            const appErrorHandler = this.injector.get(ErrorHandler);\r\n            appErrorHandler.handleError(err);\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","export default __webpack_public_path__ + \"logo.png\";"]}