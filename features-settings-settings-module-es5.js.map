{"version":3,"sources":["webpack:///src/app/features/settings/settings.module.ts","webpack:///src/app/features/settings/settings-routing.module.ts","webpack:///src/app/features/settings/settings/settings-container.component.ts","webpack:///src/app/features/settings/settings/settings-container.component.html"],"names":["SettingsModule","declarations","imports","routes","path","component","data","title","SettingsRoutingModule","forChild","exports","SettingsContainerComponent","store","routeAnimationsElements","themes","value","label","languages","settings$","pipe","language","dispatch","theme","autoNightMode","checked","stickyHeader","pageAnimations","elementsAnimations","selector","templateUrl","styleUrls","changeDetection","OnPush"],"mappings":"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","file":"features-settings-settings-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { SharedModule } from \"../../shared/shared.module\";\n\nimport { SettingsRoutingModule } from \"./settings-routing.module\";\nimport { SettingsContainerComponent } from \"./settings/settings-container.component\";\n\n@NgModule({\n  declarations: [SettingsContainerComponent],\n  imports: [CommonModule, SharedModule, SettingsRoutingModule],\n})\nexport class SettingsModule {}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { SettingsContainerComponent } from \"./settings/settings-container.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SettingsContainerComponent,\n    data: { title: \"jurador.menu.settings\" },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule {}\n","import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { Store, select } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\n\nimport { ROUTE_ANIMATIONS_ELEMENTS } from \"../../../core/core.module\";\n\nimport {\n  actionSettingsChangeAnimationsElements,\n  actionSettingsChangeAnimationsPage,\n  actionSettingsChangeAutoNightMode,\n  actionSettingsChangeLanguage,\n  actionSettingsChangeTheme,\n  actionSettingsChangeStickyHeader,\n} from \"../../../core/settings/settings.actions\";\nimport { SettingsState, State } from \"../../../core/settings/settings.model\";\nimport { selectSettings } from \"../../../core/settings/settings.selectors\";\n\n@Component({\n  selector: \"jurador-settings\",\n  templateUrl: \"./settings-container.component.html\",\n  styleUrls: [\"./settings-container.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SettingsContainerComponent implements OnInit {\n  routeAnimationsElements = ROUTE_ANIMATIONS_ELEMENTS;\n  settings$: Observable<SettingsState>;\n\n  themes = [\n    { value: \"DEFAULT-THEME\", label: \"blue\" },\n    { value: \"LIGHT-THEME\", label: \"light\" },\n    { value: \"NATURE-THEME\", label: \"nature\" },\n    { value: \"BLACK-THEME\", label: \"dark\" },\n  ];\n\n  languages = [\n    { value: \"en\", label: \"English\" },\n    { value: \"de\", label: \"Deutsch\" },\n    { value: \"sk\", label: \"Slovenčina\" },\n    { value: \"fr\", label: \"Français\" },\n    { value: \"es\", label: \"Español\" },\n    { value: \"pt-br\", label: \"Português\" },\n    { value: \"zh-cn\", label: \"简体中文\" },\n    { value: \"he\", label: \"עברית\" },\n  ];\n\n  constructor(private store: Store<State>) {}\n\n  ngOnInit() {\n    this.settings$ = this.store.pipe(select(selectSettings));\n  }\n\n  onLanguageSelect({ value: language }) {\n    this.store.dispatch(actionSettingsChangeLanguage({ language }));\n  }\n\n  onThemeSelect({ value: theme }) {\n    this.store.dispatch(actionSettingsChangeTheme({ theme }));\n  }\n\n  onAutoNightModeToggle({ checked: autoNightMode }) {\n    this.store.dispatch(actionSettingsChangeAutoNightMode({ autoNightMode }));\n  }\n\n  onStickyHeaderToggle({ checked: stickyHeader }) {\n    this.store.dispatch(actionSettingsChangeStickyHeader({ stickyHeader }));\n  }\n\n  onPageAnimationsToggle({ checked: pageAnimations }) {\n    this.store.dispatch(actionSettingsChangeAnimationsPage({ pageAnimations }));\n  }\n\n  onElementsAnimationsToggle({ checked: elementsAnimations }) {\n    this.store.dispatch(\n      actionSettingsChangeAnimationsElements({ elementsAnimations })\n    );\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-sm-12\">\n      <h1>{{ \"jurador.settings.title\" | translate }}</h1>\n    </div>\n  </div>\n  <br />\n  <ng-container *ngIf=\"settings$ | async as settings\">\n    <div class=\"row\">\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\n        <h2>{{ \"jurador.settings.general.title\" | translate }}</h2>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\"\n            ><fa-icon icon=\"language\" color=\"accent\"></fa-icon\n          ></mat-icon>\n          <mat-form-field>\n            <mat-select\n              [placeholder]=\"'jurador.settings.general.placeholder' | translate\"\n              [ngModel]=\"settings.language\"\n              (selectionChange)=\"onLanguageSelect($event)\"\n              name=\"language\"\n            >\n              <ng-container *ngFor=\"let l of languages\">\n                <!-- ngFor hack of missing ngLet of Angular -->\n                <mat-option\n                  *ngFor=\"\n                    let title of [\n                      'jurador.settings.general.language.' + l.value | translate\n                    ]\n                  \"\n                  [value]=\"l.value\"\n                  [title]=\"title !== l.label ? title : ''\"\n                >\n                  {{ l.label }}\n                </mat-option>\n              </ng-container>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\"\n            ><fa-icon icon=\"bars\" color=\"accent\"></fa-icon\n          ></mat-icon>\n          <mat-placeholder\n            >{{ \"jurador.settings.themes.sticky-header\" | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle\n            [checked]=\"settings.stickyHeader\"\n            (change)=\"onStickyHeaderToggle($event)\"\n          >\n          </mat-slide-toggle>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\n        <h2>{{ \"jurador.settings.themes.title\" | translate }}</h2>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\"\n            ><fa-icon icon=\"paint-brush\" color=\"accent\"></fa-icon\n          ></mat-icon>\n          <mat-form-field>\n            <mat-select\n              [placeholder]=\"'jurador.settings.themes.placeholder' | translate\"\n              [ngModel]=\"settings.theme\"\n              (selectionChange)=\"onThemeSelect($event)\"\n              name=\"themes\"\n            >\n              <mat-option *ngFor=\"let t of themes\" [value]=\"t.value\">\n                {{ \"jurador.settings.themes.\" + t.label | translate }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\"\n            ><fa-icon icon=\"lightbulb\" color=\"accent\"></fa-icon\n          ></mat-icon>\n          <mat-placeholder\n            >{{ \"jurador.settings.themes.night-mode\" | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle\n            [checked]=\"settings.autoNightMode\"\n            (change)=\"onAutoNightModeToggle($event)\"\n          >\n          </mat-slide-toggle>\n        </div>\n      </div>\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\n        <h2>{{ \"jurador.settings.animations.title\" | translate }}</h2>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\"\n            ><mat-icon color=\"accent\"\n              ><fa-icon icon=\"window-maximize\"></fa-icon></mat-icon\n          ></mat-icon>\n          <mat-placeholder\n            >{{ \"jurador.settings.animations.page\" | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle\n            matTooltip=\"Sorry, this feature is disabled in IE, EDGE and Safari\"\n            matTooltipPosition=\"before\"\n            *ngIf=\"settings.pageAnimationsDisabled\"\n            disabled\n          >\n          </mat-slide-toggle>\n          <mat-slide-toggle\n            *ngIf=\"!settings.pageAnimationsDisabled\"\n            [checked]=\"settings.pageAnimations\"\n            (change)=\"onPageAnimationsToggle($event)\"\n          >\n          </mat-slide-toggle>\n        </div>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\"\n            ><fa-icon icon=\"stream\" color=\"accent\"></fa-icon\n          ></mat-icon>\n          <mat-placeholder\n            >{{ \"jurador.settings.animations.elements\" | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle\n            [checked]=\"settings.elementsAnimations\"\n            (change)=\"onElementsAnimationsToggle($event)\"\n          >\n          </mat-slide-toggle>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</div>\n"]}