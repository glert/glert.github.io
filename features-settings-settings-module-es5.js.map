{"version":3,"sources":["webpack:///src/app/features/settings/settings.module.ts","webpack:///src/app/features/settings/settings-routing.module.ts","webpack:///src/app/features/settings/settings/settings-container.component.ts","webpack:///src/app/features/settings/settings/settings-container.component.html"],"names":["SettingsModule","declarations","imports","routes","path","component","data","title","SettingsRoutingModule","forChild","exports","SettingsContainerComponent","store","routeAnimationsElements","themes","value","label","languages","settings$","pipe","language","dispatch","theme","autoNightMode","checked","stickyHeader","pageAnimations","elementsAnimations","selector","templateUrl","styleUrls","changeDetection","OnPush"],"mappings":"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","file":"features-settings-settings-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\nimport { SettingsRoutingModule } from './settings-routing.module';\r\nimport { SettingsContainerComponent } from './settings/settings-container.component';\r\n\r\n@NgModule({\r\n  declarations: [SettingsContainerComponent],\r\n  imports: [CommonModule, SharedModule, SettingsRoutingModule]\r\n})\r\nexport class SettingsModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SettingsContainerComponent } from './settings/settings-container.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SettingsContainerComponent,\r\n    data: { title: 'jurador.menu.settings' }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SettingsRoutingModule {}\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ROUTE_ANIMATIONS_ELEMENTS } from '../../../core/core.module';\r\n\r\nimport {\r\n  actionSettingsChangeAnimationsElements,\r\n  actionSettingsChangeAnimationsPage,\r\n  actionSettingsChangeAutoNightMode,\r\n  actionSettingsChangeLanguage,\r\n  actionSettingsChangeTheme,\r\n  actionSettingsChangeStickyHeader\r\n} from '../../../core/settings/settings.actions';\r\nimport { SettingsState, State } from '../../../core/settings/settings.model';\r\nimport { selectSettings } from '../../../core/settings/settings.selectors';\r\n\r\n@Component({\r\n  selector: 'jurador-settings',\r\n  templateUrl: './settings-container.component.html',\r\n  styleUrls: ['./settings-container.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SettingsContainerComponent implements OnInit {\r\n  routeAnimationsElements = ROUTE_ANIMATIONS_ELEMENTS;\r\n  settings$: Observable<SettingsState>;\r\n\r\n  themes = [\r\n    { value: 'DEFAULT-THEME', label: 'blue' },\r\n    { value: 'LIGHT-THEME', label: 'light' },\r\n    { value: 'NATURE-THEME', label: 'nature' },\r\n    { value: 'BLACK-THEME', label: 'dark' }\r\n  ];\r\n\r\n  languages = [\r\n    { value: 'en', label: 'English' },\r\n    { value: 'de', label: 'Deutsch' },\r\n    { value: 'sk', label: 'Slovenčina' },\r\n    { value: 'fr', label: 'Français' },\r\n    { value: 'es', label: 'Español' },\r\n    { value: 'pt-br', label: 'Português' },\r\n    { value: 'zh-cn', label: '简体中文' },\r\n    { value: 'he', label: 'עברית' }\r\n  ];\r\n\r\n  constructor(private store: Store<State>) {}\r\n\r\n  ngOnInit() {\r\n    this.settings$ = this.store.pipe(select(selectSettings));\r\n  }\r\n\r\n  onLanguageSelect({ value: language }) {\r\n    this.store.dispatch(actionSettingsChangeLanguage({ language }));\r\n  }\r\n\r\n  onThemeSelect({ value: theme }) {\r\n    this.store.dispatch(actionSettingsChangeTheme({ theme }));\r\n  }\r\n\r\n  onAutoNightModeToggle({ checked: autoNightMode }) {\r\n    this.store.dispatch(actionSettingsChangeAutoNightMode({ autoNightMode }));\r\n  }\r\n\r\n  onStickyHeaderToggle({ checked: stickyHeader }) {\r\n    this.store.dispatch(actionSettingsChangeStickyHeader({ stickyHeader }));\r\n  }\r\n\r\n  onPageAnimationsToggle({ checked: pageAnimations }) {\r\n    this.store.dispatch(actionSettingsChangeAnimationsPage({ pageAnimations }));\r\n  }\r\n\r\n  onElementsAnimationsToggle({ checked: elementsAnimations }) {\r\n    this.store.dispatch(\r\n      actionSettingsChangeAnimationsElements({ elementsAnimations })\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12\"><h1>{{ 'jurador.settings.title' | translate }}</h1></div>\r\n  </div>\r\n  <br>\r\n  <ng-container *ngIf=\"settings$ | async as settings\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\r\n        <h2>{{ 'jurador.settings.general.title' | translate }}</h2>\r\n        <div class=\"icon-form-field\">\r\n          <mat-icon color=\"accent\"><fa-icon icon=\"language\" color=\"accent\"></fa-icon></mat-icon>\r\n          <mat-form-field>\r\n            <mat-select [placeholder]=\"'jurador.settings.general.placeholder' | translate\"\r\n                        [ngModel]=\"settings.language\"\r\n                        (selectionChange)=\"onLanguageSelect($event)\"\r\n                        name=\"language\">\r\n              <ng-container  *ngFor=\"let l of languages\">\r\n                <!-- ngFor hack of missing ngLet of Angular -->\r\n                <mat-option *ngFor=\"let title of ['jurador.settings.general.language.' + l.value | translate]\"\r\n                  [value]=\"l.value\"\r\n                  [title]=\"title !== l.label\r\n                    ? title\r\n                    : ''\">\r\n                  {{ l.label }}\r\n                </mat-option>\r\n              </ng-container>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"icon-form-field\">\r\n           <mat-icon color=\"accent\"><fa-icon icon=\"bars\" color=\"accent\"></fa-icon></mat-icon>\r\n           <mat-placeholder>{{ 'jurador.settings.themes.sticky-header' | translate }}\r\n           </mat-placeholder>\r\n           <mat-slide-toggle\r\n             [checked]=\"settings.stickyHeader\"\r\n             (change)=\"onStickyHeaderToggle($event)\">\r\n           </mat-slide-toggle>\r\n         </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\r\n        <h2>{{ 'jurador.settings.themes.title' | translate }}</h2>\r\n        <div class=\"icon-form-field\">\r\n          <mat-icon color=\"accent\"><fa-icon icon=\"paint-brush\" color=\"accent\"></fa-icon></mat-icon>\r\n          <mat-form-field>\r\n            <mat-select [placeholder]=\"'jurador.settings.themes.placeholder' | translate\"\r\n                        [ngModel]=\"settings.theme\"\r\n                        (selectionChange)=\"onThemeSelect($event)\"\r\n                        name=\"themes\">\r\n              <mat-option *ngFor=\"let t of themes\" [value]=\"t.value\">\r\n                {{ 'jurador.settings.themes.' + t.label | translate }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"icon-form-field\">\r\n          <mat-icon color=\"accent\"><fa-icon icon=\"lightbulb\" color=\"accent\"></fa-icon></mat-icon>\r\n          <mat-placeholder>{{ 'jurador.settings.themes.night-mode' | translate }}\r\n          </mat-placeholder>\r\n          <mat-slide-toggle\r\n            [checked]=\"settings.autoNightMode\"\r\n            (change)=\"onAutoNightModeToggle($event)\">\r\n          </mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\r\n        <h2>{{ 'jurador.settings.animations.title' | translate }}</h2>\r\n        <div class=\"icon-form-field\">\r\n          <mat-icon color=\"accent\"><mat-icon color=\"accent\"><fa-icon icon=\"window-maximize\"></fa-icon></mat-icon></mat-icon>\r\n          <mat-placeholder>{{ 'jurador.settings.animations.page' | translate }}\r\n          </mat-placeholder>\r\n          <mat-slide-toggle\r\n            matTooltip=\"Sorry, this feature is disabled in IE, EDGE and Safari\"\r\n            matTooltipPosition=\"before\"\r\n            *ngIf=\"settings.pageAnimationsDisabled\"\r\n            disabled>\r\n          </mat-slide-toggle>\r\n          <mat-slide-toggle\r\n            *ngIf=\"!settings.pageAnimationsDisabled\"\r\n            [checked]=\"settings.pageAnimations\"\r\n            (change)=\"onPageAnimationsToggle($event)\">\r\n          </mat-slide-toggle>\r\n        </div>\r\n        <div class=\"icon-form-field\">\r\n          <mat-icon color=\"accent\"><fa-icon icon=\"stream\" color=\"accent\"></fa-icon></mat-icon>\r\n          <mat-placeholder>{{ 'jurador.settings.animations.elements' | translate }}\r\n          </mat-placeholder>\r\n          <mat-slide-toggle\r\n            [checked]=\"settings.elementsAnimations\"\r\n            (change)=\"onElementsAnimationsToggle($event)\">\r\n          </mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n"]}